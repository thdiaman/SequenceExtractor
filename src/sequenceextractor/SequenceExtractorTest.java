package sequenceextractor;

import sequenceextractor.SequenceExtractor;

/**
 * Class used as a test of the {@link SequenceExtractor}.
 * 
 * @author themis
 */
public class SequenceExtractorTest {

	/**
	 * Gives a snippet to the sequence extractor and prints the extracted sequence.
	 * 
	 * @param args unused parameter.
	 */
	public static void main(String[] args) {
		// @formatter:off
		String sequence = SequenceExtractor.extractSequence(""
				+ "BufferedWriter out = null;\n"
				+ "try {\n"
				+ "	out = new BufferedWriter(new FileWriter(filePath));\n"
				+ "	out.write(content);\n"
				+ "} finally {\n"
				+ "	if (out != null)\n"
				+ "		out.close();\n"
				+ "}\n"				
				
//+ "/*\n"
//+ " * Copyright (c) JForum Team. All rights reserved.\n"
//+ " *\n"
//+ " * The software in this package is published under the terms of the LGPL\n"
//+ " * license a copy of which has been included with this distribution in the\n"
//+ " * license.txt file.\n"
//+ " *\n"
//+ " * The JForum Project\n"
//+ " * http://www.jforum.net\n"
//+ " */\n"
//+ "package net.jforum.util;\n"
//+ "\n"
//+ "import java.security.MessageDigest;\n"
//+ "import java.security.NoSuchAlgorithmException;\n"
//+ "\n"
//+ "import net.jforum.core.exceptions.ForumException;\n"
//+ "/**\n"
//+ " * Encodes a string using MD5 hashing\n"
//+ " *\n"
//+ " * @author Rafael Steil\n"
//+ " */\n"
//+ "public class MD5 {\n"
//+ "	/**\n"
//+ "	 * Encodes a string\n"
//+ "	 *\n"
//+ "	 * @param str String to encode\n"
//+ "	 * @return Encoded String\n"
//+ "	 * @throws NoSuchAlgorithmException\n"
//+ "	 */\n"
//+ "	public static String hash(String str) {\n"
//+ "		if (str == null || str.length() == 0) {\n"
//+ "			throw new IllegalArgumentException(\"String cannot be null or zero length\");\n"
//+ "		}\n"
//+ "\n"
//+ "		StringBuilder hexString = new StringBuilder();\n"
//+ "		try {\n"
//+ "			MessageDigest md = MessageDigest.getInstance(\"MD5\");\n"
//+ "			md.update(str.getBytes());\n"
//+ "			byte[] hash = md.digest();\n"
//+ "\n"
//+ "			for (byte element : hash) {\n"
//+ "				if ((0xff & element) < 0x10) {\n"
//+ "					hexString.append('0').append(Integer.toHexString((0xFF & element)));\n"
//+ "				}\n"
//+ "				else {\n"
//+ "					hexString.append(Integer.toHexString(0xFF & element));\n"
//+ "				}\n"
//+ "			}\n"
//+ "		}\n"
//+ "		catch (NoSuchAlgorithmException e) {\n"
//+ "			throw new ForumException(e);\n"
//+ "		}\n"
//+ "\n"
//+ "		return hexString.toString();\n"
//+ "	}\n"
//+ "}\n"
//+ "\n"
/*						+ "public void methodAAA(){\n"
						+ "int m = 4;"
						+ "try {\n"
						+ "   m = 5;\n"
						+ "} catch (Exception e) {\n"
						+ "   m = 3;\n"
						+ "} catch (OtherException e) {\n"
						+ "   m = 2;\n"
						+ "} finally {\n"
						+ "   m = 1;\n"
						+ "}\n"
						+ ""
						+ "}\n"
						+ "public void methodA(){\n"
						+ ""
						+ "JFrame frame = new JFrame(\"myframe\");\n"
						+ "JPanel panel = new JPanel()\n;"
						+ "Container pane = frame.getContentPane();\n"
						+ "GridLayout layout = new GridLayout(2,2);\n"
						+ "int m = 10;\n"
						+ "int n;\n"
						+ "if (m > 0){\n"
						+ "   n = 1;\n"
						+ "   n = 2;\n"
						+ "}else if (m < 0){\n"
						+ "   n = 4;\n"
						+ "}else if (m < -2){\n"
						+ "   n = 5;\n"
						+ "}else\n"
						+ "   n = 3;\n"
						+ "if (n > 0)\n"
						+ "   m = 1;\n"
						+ "panel.setLayout(layout);\n"
						+ "panel.add(upperLeft);\n"
						+ "panel.add(upperRight);\n"
						+ "panel.add(lowerLeft);\n"
						+ "panel.add(lowerRight);\n"
						+ "pane.add(panel);\n"
						+ ""
						+ "}\n"
						+ ""
						+ "public void methodB(){\n"
						+ "int m = 2;"
						+ "int n = 3;"
						+ "for (int i = 0; i < 10; i++)"
						+ "   n = 3;"
						+ "while (m > 5)"
						+ "   m = m-1;"
						+ "do {"
						+ "   m = m-1;"
						+ "} while (m > 5);"
						+ ""
						+ ""
						+ "}\n"
						+ "\n"
						+ "public void methodC(){\n"
						+ "int m = 2;"
						+ "int n = 3;"

						+ "switch (m) {\n"
						+ "case 1:  n = 2; n = 4; break;\n"
						+ "case 2:  n = 3; break;\n"
						+ "case 3:  n = 4; break;\n"
						+ "case 4:  n = 5; break;\n"
						+ "case 5:  n = 6; break;\n"
						+ "default: n = 1; break;\n"
						+ "}\n"
						+ ""
						+ ""
						+ "}\n"
						+ ""
						+ ""
*/						, true, true, true, true, false);
		// @formatter:on
		System.out.println(sequence);
	}
}
